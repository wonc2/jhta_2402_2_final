<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.jhta_2402_2_final.dao.product.ProductAdminDao">

    <select id="getProductSourceList" resultType="SourcePriceViewDto">
        SELECT
            ROW_NUMBER() OVER (ORDER BY P_C.NAME) AS rowNum,
            P_C.NAME AS productCompanyName,
            S.NAME AS sourceName,
            S_P.PRICE AS sourcePrice
        FROM
            SOURCE_PRICE S_P
                JOIN PRODUCT_COMPANY P_C ON P_C.PRODUCT_COMPANY_ID = S_P.PRODUCT_COMPANY_ID
                JOIN SOURCE S ON S.SOURCE_ID = S_P.SOURCE_ID
    </select>

    <select id="getSourcePriceListCompanyName" resultType="SourcePriceViewDto" parameterType="String">
        SELECT
            ROW_NUMBER() OVER (ORDER BY P_C.NAME) AS rowNum,
                P_C.NAME AS productCompanyName,
            S.NAME AS sourceName,
            S_P.PRICE AS sourcePrice
        FROM
            SOURCE_PRICE S_P
                JOIN PRODUCT_COMPANY P_C ON P_C.PRODUCT_COMPANY_ID = S_P.PRODUCT_COMPANY_ID
                JOIN SOURCE S ON S.SOURCE_ID = S_P.SOURCE_ID
                WHERE P_C.NAME = #{companyName}
    </select>
    <select id="getSourcePriceListProductName" resultType="SourcePriceViewDto" parameterType="String">
        SELECT
            ROW_NUMBER() OVER (ORDER BY P_C.NAME) AS rowNum,
                P_C.NAME AS productCompanyName,
            S.NAME AS sourceName,
            S_P.PRICE AS sourcePrice
        FROM
            SOURCE_PRICE S_P
                JOIN PRODUCT_COMPANY P_C ON P_C.PRODUCT_COMPANY_ID = S_P.PRODUCT_COMPANY_ID
                JOIN SOURCE S ON S.SOURCE_ID = S_P.SOURCE_ID
                WHERE S.NAME = #{productName}
    </select>

    <select id="getSourcePriceListCompanyNameProductName" resultType="SourcePriceViewDto" parameterType="String">
        SELECT
            ROW_NUMBER() OVER (ORDER BY P_C.NAME) AS rowNum,
                P_C.NAME AS productCompanyName,
            S.NAME AS sourceName,
            S_P.PRICE AS sourcePrice
        FROM
            SOURCE_PRICE S_P
                JOIN PRODUCT_COMPANY P_C ON P_C.PRODUCT_COMPANY_ID = S_P.PRODUCT_COMPANY_ID
                JOIN SOURCE S ON S.SOURCE_ID = S_P.SOURCE_ID
                WHERE P_C.NAME = #{companyName} AND S.NAME = #{productName}
    </select>
<!--모든 생산 주문 리스트 가져오기 (테이블에서사용)-->
    <select id="getProductOrderList" resultType="ProductOrderViewDto">
        SELECT
            ROW_NUMBER() OVER (ORDER BY P_C.NAME) AS rowNum,
                P_C.NAME AS productCompanyName,
            S.NAME AS sourceName,
            P_O_T.PRICE AS sourcePrice,
            P_O_T.QUANTITY AS quantity,
            (P_O_T.PRICE * P_O_T.QUANTITY) AS totalPrice,
            P_O_T.PRODUCT_ORDER_DATE AS productOrderDate,
            ST.STATUS AS status
        FROM PRODUCT_ORDER P_O_T
                 JOIN PRODUCT_COMPANY P_C ON P_C.PRODUCT_COMPANY_ID = P_O_T.PRODUCT_COMPANY_ID
                 JOIN SOURCE S ON P_O_T.SOURCE_ID = S.SOURCE_ID
                 JOIN STATUS ST ON ST.STATUS_ID = P_O_T.STATUS_ID
    </select>
<!--생산 주문에서 생산품을 조건으로 넣은것 (테이블 조건검색)-->
    <select id="getProductOrderListProductName" resultType="ProductOrderViewDto" parameterType="String">
        SELECT
            ROW_NUMBER() OVER (ORDER BY P_C.NAME) AS rowNum,
                P_C.NAME AS productCompanyName,
            S.NAME AS sourceName,
            P_O_T.PRICE AS sourcePrice,
            P_O_T.QUANTITY AS quantity,
            (P_O_T.PRICE * P_O_T.QUANTITY) AS totalPrice,
            P_O_T.PRODUCT_ORDER_DATE AS productOrderDate,
            ST.STATUS AS status
        FROM PRODUCT_ORDER P_O_T
                 JOIN PRODUCT_COMPANY P_C ON P_C.PRODUCT_COMPANY_ID = P_O_T.PRODUCT_COMPANY_ID
                 JOIN SOURCE S ON P_O_T.SOURCE_ID = S.SOURCE_ID
                 JOIN STATUS ST ON ST.STATUS_ID = P_O_T.STATUS_ID
                 WHERE S.NAME = #{productName}
    </select>
    <!--생산 주문에서 생산업체명을 조건으로 넣은것 (테이블 조건검색)-->
    <select id="getProductOrderListCompanyName" resultType="ProductOrderViewDto" parameterType="String">
        SELECT
            ROW_NUMBER() OVER (ORDER BY P_C.NAME) AS rowNum,
                P_C.NAME AS productCompanyName,
            S.NAME AS sourceName,
            P_O_T.PRICE AS sourcePrice,
            P_O_T.QUANTITY AS quantity,
            (P_O_T.PRICE * P_O_T.QUANTITY) AS totalPrice,
            P_O_T.PRODUCT_ORDER_DATE AS productOrderDate,
            ST.STATUS AS status
        FROM PRODUCT_ORDER P_O_T
                 JOIN PRODUCT_COMPANY P_C ON P_C.PRODUCT_COMPANY_ID = P_O_T.PRODUCT_COMPANY_ID
                 JOIN SOURCE S ON P_O_T.SOURCE_ID = S.SOURCE_ID
                 JOIN STATUS ST ON ST.STATUS_ID = P_O_T.STATUS_ID
                 WHERE P_C.NAME = #{companyName}
    </select>
    <!--생산 주문에서 생산품,생산업체명을 조건으로 넣은것 (테이블 조건검색)-->
    <select id="getProductOrderListCompanyNameProductName" resultType="ProductOrderViewDto" parameterType="String">
        SELECT
            ROW_NUMBER() OVER (ORDER BY P_C.NAME) AS rowNum,
                P_C.NAME AS productCompanyName,
            S.NAME AS sourceName,
            P_O_T.PRICE AS sourcePrice,
            P_O_T.QUANTITY AS quantity,
            (P_O_T.PRICE * P_O_T.QUANTITY) AS totalPrice,
            P_O_T.PRODUCT_ORDER_DATE AS productOrderDate,
            ST.STATUS AS status
        FROM PRODUCT_ORDER P_O_T
                 JOIN PRODUCT_COMPANY P_C ON P_C.PRODUCT_COMPANY_ID = P_O_T.PRODUCT_COMPANY_ID
                 JOIN SOURCE S ON P_O_T.SOURCE_ID = S.SOURCE_ID
                 JOIN STATUS ST ON ST.STATUS_ID = P_O_T.STATUS_ID
                 WHERE P_C.NAME = #{companyName} AND S.NAME = #{productName}
    </select>
    <select id="getProductOrderQuantityListCompanyName" resultType="ProductOrderQuantityDto" parameterType="String">
        SELECT
            P_C.NAME AS productCompanyName,
            S.NAME AS productName,
            SUM(P_O.QUANTITY) AS quantity
        FROM PRODUCT_ORDER P_O
                 JOIN PRODUCT_COMPANY P_C ON P_O.PRODUCT_COMPANY_ID = P_C.PRODUCT_COMPANY_ID
                 JOIN SOURCE S ON P_O.SOURCE_ID = S.SOURCE_ID
        WHERE P_C.NAME = #{companyName}
        GROUP BY P_C.NAME, S.NAME ;
    </select>
<!--  상품별 최저가 리스트 (차트용)  -->
    <select id="getSourceMinPriceListForChart" resultType="SourceMinPriceDto">
        SELECT P_C.NAME AS productCompanyName , S.NAME AS productName , MIN(S_P.PRICE) AS minPrice
        FROM SOURCE_PRICE S_P
                 JOIN PRODUCT_COMPANY P_C ON S_P.PRODUCT_COMPANY_ID = P_C.PRODUCT_COMPANY_ID
                 JOIN SOURCE S ON S_P.SOURCE_ID = S.SOURCE_ID
        GROUP BY productName;
    </select>
<!--  업체별 상품가격 리스트(차트용)  -->
    <select id="getSourcePriceCompanyList" resultType="ProductCompanySourcePriceDto">
        SELECT P_C.NAME AS productCompanyName, S.NAME AS productName, S_P.PRICE AS price
        FROM SOURCE_PRICE S_P
                 JOIN PRODUCT_COMPANY P_C ON S_P.PRODUCT_COMPANY_ID = P_C.PRODUCT_COMPANY_ID
                 JOIN SOURCE S ON S_P.SOURCE_ID = S.SOURCE_ID
        WHERE P_C.NAME = #{productCompanyName};
    </select>
<!--  업체별 주문들어온 주문수량 리스트(차트용)  -->
    <select id="getProductOrderCount" resultType="ProductOrderCountDto">
        SELECT P_C.NAME AS productCompanyName , COUNT(P_O.PRODUCT_ORDER_ID) AS count
        FROM PRODUCT_ORDER P_O
                 JOIN PRODUCT_COMPANY P_C ON P_O.PRODUCT_COMPANY_ID = P_C.PRODUCT_COMPANY_ID
                 GROUP BY P_C.NAME;
    </select>
<!--  주문의 상품수량 조회   -->
    <select id="getProductCountList" resultType="ProductCountDto">
        SELECT S.NAME AS productName,
               SUM(P_O.QUANTITY) AS quantity
        FROM PRODUCT_ORDER P_O
                 JOIN SOURCE S ON P_O.SOURCE_ID = S.SOURCE_ID
        GROUP BY S.NAME;
    </select>

    <insert id="insertProductCompany" parameterType="ProductCompanyDto">
        INSERT INTO PRODUCT_COMPANY (PRODUCT_COMPANY_ID,NAME,ADDRESS) VALUES
               (UUID(),#{productCompanyName},#{productCompanyAddress})
    </insert>
    <select id="getProductCompanyId" parameterType="String">
        SELECT P_C.PRODUCT_COMPANY_ID
        FROM PRODUCT_COMPANY P_C
        WHERE P_C.NAME = #{productCompanyName};
    </select>
</mapper>